{"version":3,"sources":["components/Section/Section.jsx","components/InputForm/InputForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","App.module.css"],"names":["Section","title","children","className","InputForm","addContact","onSubmit","type","name","pattern","required","Filter","info","filterContact","contacts","length","onChange","ContactList","deleteContact","filter","contact","toLowerCase","includes","map","number","id","onClick","uuidv4","App","state","handleAddContact","evt","preventDefault","doubleContact","find","target","elements","value","alert","newContact","setState","prevState","handleFilterContact","handleDeleteContact","arrayWithoutDeletedContact","s","app","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b1f915e2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport function Section({ title, children }) {\r\n  return (\r\n    <div className=\"section\">\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './InputForm.module.css';\r\n\r\nexport function InputForm({ addContact }) {\r\n  return (\r\n    <form onSubmit={addContact}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nInputForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport function Filter({ info, filterContact }) {\r\n  const moreTwoContacts = info.contacts.length > 2;\r\n  return (\r\n    moreTwoContacts && (\r\n      <label>\r\n        Find contacts by name\r\n        <input type=\"text\" onChange={filterContact} />\r\n      </label>\r\n    )\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  info: PropTypes.shape({\r\n    contacts: PropTypes.array,\r\n  }),\r\n  filterContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport function ContactList({ info, deleteContact, children }) {\r\n  const { contacts, filter } = info;\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      {children}\r\n      <ul>\r\n        {!filter\r\n          ? contacts.map(contact => (\r\n              <li key={uuidv4()}>\r\n                {contact.name} {contact.number}\r\n                <button type=\"button\" id={contact.id} onClick={deleteContact}>\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))\r\n          : contacts\r\n              .filter(contact => contact.name.toLowerCase().includes(filter))\r\n              .map(contact => (\r\n                <li key={contact.id}>\r\n                  {contact.name} {contact.number}\r\n                </li>\r\n              ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n  }),\r\n  filter: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Section } from './components/Section/Section.jsx';\r\nimport { InputForm } from './components/InputForm/InputForm.jsx';\r\nimport { Filter } from './components/Filter/Filter.jsx';\r\nimport { ContactList } from './components/ContactList/ContactList.jsx';\r\nimport s from './App.module.css';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\r\n      { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  handleAddContact = evt => {\r\n    evt.preventDefault();\r\n\r\n    const doubleContact = this.state.contacts.find(\r\n      contact =>\r\n        evt.target.elements[0].value.toLowerCase() ===\r\n        contact.name.toLowerCase(),\r\n    );\r\n\r\n    if (!doubleContact) {\r\n      const newContact = {\r\n        id: uuidv4(),\r\n        name: evt.target.elements.name.value,\r\n        number: evt.target.elements.number.value,\r\n      };\r\n\r\n      this.setState(prevState => {\r\n        return {\r\n          contacts: [...prevState.contacts, newContact],\r\n        };\r\n      });\r\n    } else {\r\n      alert(doubleContact.name + 'is alredy in contacts');\r\n    }\r\n\r\n    evt.target.elements[0].value = '';\r\n    evt.target.elements[1].value = '';\r\n  };\r\n\r\n  handleFilterContact = evt => {\r\n    evt.preventDefault();\r\n\r\n    this.setState({ filter: evt.target.value.toLowerCase() });\r\n  };\r\n\r\n  handleDeleteContact = evt => {\r\n    const arrayWithoutDeletedContact = this.state.contacts.filter(contact => {\r\n      return contact.id !== evt.target.id;\r\n    });\r\n\r\n    this.setState({\r\n      contacts: [...arrayWithoutDeletedContact],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.app}>\r\n        <Section title={'Phonebook'}>\r\n          <InputForm addContact={this.handleAddContact} />\r\n          <ContactList\r\n            info={this.state}\r\n            deleteContact={this.handleDeleteContact}\r\n          >\r\n            <Filter\r\n              info={this.state}\r\n              filterContact={this.handleFilterContact}\r\n            />\r\n          </ContactList>\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1N-iD\"};"],"sourceRoot":""}